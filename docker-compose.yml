services:
  # postgres:
  #   container_name: postgres_container
  #   networks:
  #     - app-network
  #   env_file:
  #     - .env
  #   ports:
  #     - 5432:5432
  #   expose:
  #     - 5432
  #   volumes:
  #     - ./db/postgres:/var/lib/postgresql/data
  #   image: postgres
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   restart: unless-stopped



  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    env_file:
      - .env
    container_name: elasticsearch_container
    volumes:
      - ./db/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elk_network
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      discovery.type: single-node
      xpack.security.enrollment.enabled: true
    restart: always


  kib01:
    image: docker.elastic.co/kibana/kibana:8.14.1
    container_name: kibana_container
    volumes:
      - ./elk-config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - elk_network
    links:
      - es01:elasticsearch
    depends_on:
      - es01


  logs01:
    image: docker.elastic.co/logstash/logstash:8.14.1
    container_name: logstash_container
    ports:
      - 5044:5044
      - 5000:5000
      - 9600:9600
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    volumes:
      - ./elk-config/logstash:/usr/share/logstash/pipeline
      - ./elk-config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logs:/var/log
    networks:
      - elk_network
    depends_on:
      - es01


  nginx:
    container_name: nginx_container
    networks:
      - app-network
      - elk_network
    image: julesventer/talk-take-teach:latest
    volumes:
      - ./logs/nginx:/var/log/nginx
    ports:
      - 80:80
      - 4200:4200
    depends_on:
      - logs01


  elysia:
    container_name: elysia_container
    networks:
      - app-network
    env_file:
      - .env
    image: lesedim/talktaketeach-backend-elysia:latest
    volumes:
      - ./logs/elysia:/var/log/elysia
    ports:
      - 3000:3000
    logging:
      driver: json-file
      # options:
      #   max-size: "10m"  
      #   max-file: "5"    
    depends_on:
      postgres:
        condition: service_healthy
      - logs01

  # adminer:
  #   image: adminer
  #   container_name: adminer_container
  #   restart: always
  #   env_file:
  #     - .env
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - app-network
  #   depends_on:
  #     - postgres
networks:
  app-network:
    driver: bridge
  elk_network:
    driver: bridge


# run commands:
# docker-compose build
# docker-compose up -d